enriched_data <- cbind.data.frame(media,mediana,minimo,maximo,
desvio_padrao,variancia)
covariancia <- cov(dados$`PL em milhoes`,dados$Retorno)
correlacao <- cor(dados$`PL em milhoes`,dados$Retorno)
[covariancia <- cov(dados$`PL em milhoes`,dados$Retorno)]
(covariancia <- cov(dados$`PL em milhoes`,dados$Retorno))
x <- dados$`PL em milhoes`
y <- dados$Retorno
reg <- lm(y ~ x)
reg_slm <- summary(reg)
reg_slm
abline(reg, col=4)
anova(reg)
reg_slm
coef(reg)
reg$model
reg$effects
reg_slm
reg_slm[1]
reg_slm[2]
reg_slm$r.squared
reg_slm
reg_slm$coefficients
reg_slm$coefficients[1,4]
#Coeficiente
reg_slm$coefficients[2,4]
reg_slm
result <- reg_slm$coefficients[1,1] + reg_slm$coefficients[2,1] * 7800
result
regSemAlfa <- lm(y ~ x - 1)
summary(regSemAlfa)
# Questão 1 - Feito
plot(dados$`PL em milhoes`, dados$Retorno,
pch  = 8,
col  = "green",
lwd  = 5,
main = "Relação entre Retorno e Patrimonio liquido de fundos de investimento",
xlab = "Patrimonio Liquido do fundo",
ylab = "Retorno do fundo")
abline(reg, col=4)
regSemAlfa <- lm(y ~ x - 1)
# Questão 11
abline(regSemAlfa, col="red")
regSemAlfa_slm <- summary(regSemAlfa)
regSemAlfa
regSemAlfa_slm
summary(cars)
summary(cars)
plot(cars)
summary(cars)
summary(cars)
plot(cars)
install.packages("rmarkdown")
install.packages("rmarkdown")
install.packages("rmarkdown")
library(AER)
dados <- read.table("ArquivoExercicio1.csv",header=T,sep=";", dec=".",check.names = F)
names(dados) <- c("Fundos","PL em milhoes","Retorno")
plot(dados$`PL em milhoes`, dados$Retorno,
pch  = 8,
col  = "green",
lwd  = 5,
main = "Relação entre Retorno e Patrimonio liquido de fundos de investimento",
xlab = "Patrimonio Liquido do fundo",
ylab = "Retorno do fundo")
media <- c(mean(dados$`PL em milhoes`),mean(dados$Retorno))
mediana <- c(median(dados$`PL em milhoes`),median(dados$Retorno))
minimo <- c(min(dados$`PL em milhoes`),min(dados$Retorno))
maximo <- c(max(dados$`PL em milhoes`),max(dados$Retorno))
desvio_padrao <- c(sd(dados$`PL em milhoes`),sd(dados$Retorno))
variancia <- c(var(dados$`PL em milhoes`),var(dados$Retorno))
enriched_data <- cbind.data.frame(media,mediana,minimo,maximo,
desvio_padrao,variancia)
enriched_data
covariancia <- cov(dados$`PL em milhoes`,dados$Retorno)
correlacao <- cor(dados$`PL em milhoes`,dados$Retorno)
summary(cars)
plot(cars)
library(AER)
dados <- read.table("ArquivoExercicio1.csv",header=T,sep=";", dec=".",check.names = F)
names(dados) <- c("Fundos","PL em milhoes","Retorno")
plot(dados$`PL em milhoes`, dados$Retorno,
pch  = 8,
col  = "green",
lwd  = 5,
main = "Relação entre Retorno e Patrimonio liquido de fundos de investimento",
xlab = "Patrimonio Liquido do fundo",
ylab = "Retorno do fundo")
media <- c(mean(dados$`PL em milhoes`),mean(dados$Retorno))
mediana <- c(median(dados$`PL em milhoes`),median(dados$Retorno))
minimo <- c(min(dados$`PL em milhoes`),min(dados$Retorno))
maximo <- c(max(dados$`PL em milhoes`),max(dados$Retorno))
desvio_padrao <- c(sd(dados$`PL em milhoes`),sd(dados$Retorno))
variancia <- c(var(dados$`PL em milhoes`),var(dados$Retorno))
enriched_data <- cbind.data.frame(media,mediana,minimo,maximo,
desvio_padrao,variancia)
enriched_data
covariancia <- cov(dados$`PL em milhoes`,dados$Retorno)
correlacao <- cor(dados$`PL em milhoes`,dados$Retorno)
summary(cars)
plot(cars)
library(AER)
dados <- read.table("ArquivoExercicio1.csv",header=T,sep=";", dec=".",check.names = F)
names(dados) <- c("Fundos","PL em milhoes","Retorno")
plot(dados$`PL em milhoes`, dados$Retorno,
pch  = 8,
col  = "green",
lwd  = 5,
main = "Relação entre Retorno e Patrimonio liquido de fundos de investimento",
xlab = "Patrimonio Liquido do fundo",
ylab = "Retorno do fundo")
media <- c(mean(dados$`PL em milhoes`),mean(dados$Retorno))
mediana <- c(median(dados$`PL em milhoes`),median(dados$Retorno))
minimo <- c(min(dados$`PL em milhoes`),min(dados$Retorno))
maximo <- c(max(dados$`PL em milhoes`),max(dados$Retorno))
desvio_padrao <- c(sd(dados$`PL em milhoes`),sd(dados$Retorno))
variancia <- c(var(dados$`PL em milhoes`),var(dados$Retorno))
enriched_data <- cbind.data.frame(media,mediana,minimo,maximo,
desvio_padrao,variancia)
enriched_data
covariancia <- cov(dados$`PL em milhoes`,dados$Retorno)
correlacao <- cor(dados$`PL em milhoes`,dados$Retorno)
summary(cars)
plot(cars)
media <- c(mean(dados$`PL em milhoes`),mean(dados$Retorno))
mediana <- c(median(dados$`PL em milhoes`),median(dados$Retorno))
minimo <- c(min(dados$`PL em milhoes`),min(dados$Retorno))
maximo <- c(max(dados$`PL em milhoes`),max(dados$Retorno))
desvio_padrao <- c(sd(dados$`PL em milhoes`),sd(dados$Retorno))
variancia <- c(var(dados$`PL em milhoes`),var(dados$Retorno))
enriched_data <- cbind.data.frame(media,mediana,minimo,maximo, desvio_padrao,variancia)
round_df(enriched_data,5)
library(AER)
dados <- read.table("ArquivoExercicio1.csv",header=T,sep=";", dec=".",check.names = F)
names(dados) <- c("Fundos","PL em milhoes","Retorno")
round_df <- function(df, digits) {
nums <- vapply(df, is.numeric, FUN.VALUE = logical(1))
df[,nums] <- round(df[,nums], digits = digits)
(df)
}
media <- c(mean(dados$`PL em milhoes`),mean(dados$Retorno))
mediana <- c(median(dados$`PL em milhoes`),median(dados$Retorno))
minimo <- c(min(dados$`PL em milhoes`),min(dados$Retorno))
maximo <- c(max(dados$`PL em milhoes`),max(dados$Retorno))
desvio_padrao <- c(sd(dados$`PL em milhoes`),sd(dados$Retorno))
variancia <- c(var(dados$`PL em milhoes`),var(dados$Retorno))
enriched_data <- cbind.data.frame(media,mediana,minimo,maximo, desvio_padrao,variancia)
round_df(enriched_data,5)
media <- c(mean(dados$`PL em milhoes`),mean(dados$Retorno))
mediana <- c(median(dados$`PL em milhoes`),median(dados$Retorno))
minimo <- c(min(dados$`PL em milhoes`),min(dados$Retorno))
maximo <- c(max(dados$`PL em milhoes`),max(dados$Retorno))
desvio_padrao <- c(sd(dados$`PL em milhoes`),sd(dados$Retorno))
variancia <- c(var(dados$`PL em milhoes`),var(dados$Retorno))
enriched_data <- cbind.data.frame(media,mediana,minimo,maximo, desvio_padrao,variancia)
round_df(enriched_data,4)
library(AER)
dados <- read.table("ArquivoExercicio1.csv",header=T,sep=";", dec=".",check.names = F)
names(dados) <- c("Fundos","PL em milhoes","Retorno")
options(scipen = 100)
media <- c(mean(dados$`PL em milhoes`),mean(dados$Retorno))
mediana <- c(median(dados$`PL em milhoes`),median(dados$Retorno))
minimo <- c(min(dados$`PL em milhoes`),min(dados$Retorno))
maximo <- c(max(dados$`PL em milhoes`),max(dados$Retorno))
desvio_padrao <- c(sd(dados$`PL em milhoes`),sd(dados$Retorno))
variancia <- c(var(dados$`PL em milhoes`),var(dados$Retorno))
enriched_data <- cbind.data.frame(media,mediana,minimo,maximo, desvio_padrao,variancia)
round_df(enriched_data,4)
media <- c(mean(dados$`PL em milhoes`),mean(dados$Retorno))
mediana <- c(median(dados$`PL em milhoes`),median(dados$Retorno))
minimo <- c(min(dados$`PL em milhoes`),min(dados$Retorno))
maximo <- c(max(dados$`PL em milhoes`),max(dados$Retorno))
desvio_padrao <- c(sd(dados$`PL em milhoes`),sd(dados$Retorno))
variancia <- c(var(dados$`PL em milhoes`),var(dados$Retorno))
enriched_data <- cbind.data.frame(media,mediana,minimo,maximo, desvio_padrao,variancia)
enriched_data
library(AER)
dados <- read.table("ArquivoExercicio1.csv",header=T,sep=";", dec=".",check.names = F)
names(dados) <- c("Fundos","PL em milhoes","Retorno")
options(scipen = 100)
round_df <- function(df, digits) {
nums <- vapply(df, is.numeric, FUN.VALUE = logical(1))
df[,nums] <- round(df[,nums], digits = digits)
(df)
}
library(AER)
dados <- read.table("ArquivoExercicio1.csv",header=T,sep=";", dec=".",check.names = F)
names(dados) <- c("Fundos","PL em milhoes","Retorno")
options(scipen = 100)
round_df <- function(df, digits) {
nums <- vapply(df, is.numeric, FUN.VALUE = logical(1))
df[,nums] <- round(df[,nums], digits = digits)
(df)
}
media <- c(mean(dados$`PL em milhoes`),mean(dados$Retorno))
mediana <- c(median(dados$`PL em milhoes`),median(dados$Retorno))
minimo <- c(min(dados$`PL em milhoes`),min(dados$Retorno))
maximo <- c(max(dados$`PL em milhoes`),max(dados$Retorno))
desvio_padrao <- c(sd(dados$`PL em milhoes`),sd(dados$Retorno))
variancia <- c(var(dados$`PL em milhoes`),var(dados$Retorno))
enriched_data <- cbind.data.frame(media,mediana,minimo,maximo, desvio_padrao,variancia)
round_df(enriched_data,5)
grafico = plot(dados$`PL em milhoes`, dados$Retorno,
pch  = 8,
col  = "green",
lwd  = 5,
main = "Relação entre Retorno e Patrimonio liquido de fundos de investimento",
xlab = "Patrimonio Liquido do fundo",
ylab = "Retorno do fundo")
grafico <- plot(dados$`PL em milhoes`, dados$Retorno,
pch  = 8,
col  = "green",
lwd  = 5,
main = "Relação entre Retorno e Patrimonio liquido de fundos de investimento",
xlab = "Patrimonio Liquido do fundo",
ylab = "Retorno do fundo")
grafico
grafico()
#Grafico Anterior:
plot(dados$`PL em milhoes`, dados$Retorno,
pch  = 8,
col  = "green",
lwd  = 5,
main = "Relação entre Retorno e Patrimonio liquido de fundos de investimento",
xlab = "Patrimonio Liquido do fundo",
ylab = "Retorno do fundo")
abline(reg, col=4)
abline(reg, col=4)
abline(reg, col=4)
#Grafico Anterior:
plot(dados$`PL em milhoes`, dados$Retorno,
pch  = 8,
col  = "green",
lwd  = 5,
main = "Relação entre Retorno e Patrimonio liquido de fundos de investimento",
xlab = "Patrimonio Liquido do fundo",
ylab = "Retorno do fundo")
#Grafico Anterior:
plot(dados$`PL em milhoes`, dados$Retorno,
pch  = 8,
col  = "green",
lwd  = 5,
main = "Relação entre Retorno e Patrimonio liquido de fundos de investimento",
xlab = "Patrimonio Liquido do fundo",
ylab = "Retorno do fundo")
abline(reg, col=4)
coef(reg)
reg_slm <- summary(reg)
reg_slm
paste("coeficientes", coef(reg))
reg_slm <- summary(reg)
reg_slm
coef(reg)
reg_slm <- summary(reg)
reg_slm
coeficientes <- coef(reg)
paste("Coeficiente do intercepto:",coeficientes[1])
paste("Coeficiente do X:",coeficientes[2])
reg_slm <- summary(reg)
reg_slm
coeficientes
reg_slm <- summary(reg)
reg_slm
paste("P Value do modelo ="+ reg_slm[1])
paste("P Value do modelo ="+ reg_slm)
reg_slm
reg_slm
reg_slm$terms
reg_slm$fstatistic
reg_slm[1]
reg_slm[2]
reg_slm[3]
reg_slm[4]
reg_slm[5]
reg_slm[6]
reg_slm[7]
reg_slm
reg_slm[7]
reg_slm[8]
reg_slm[9]
reg_slm[10]
reg_slm[11]
reg_slm[12]
reg_slm[13]
reg_slm
reg_slm$fstatistic
reg_slm$coefficients[,4]
reg_slm$fstatistic[,2]
reg_slm$fstatistic
anova(reg_slm)
anova(reg)
reg_slm
reg_slm$call
reg_slm$aliased
require(broom)
glance(reg)
glance(reg)$p.value
reg_slm
library(AER)
dados <- read.table("ArquivoExercicio1.csv",header=T,sep=";", dec=".",check.names = F)
names(dados) <- c("Fundos","PL em milhoes","Retorno")
options(scipen = 100)
require(broom)
round_df <- function(df, digits) {
nums <- vapply(df, is.numeric, FUN.VALUE = logical(1))
df[,nums] <- round(df[,nums], digits = digits)
(df)
}
coeficientes <- coef(reg)
paste("Coeficiente do intercepto:",coeficientes[1])
paste("Coeficiente do X:",coeficientes[2])
reg_slm <- summary(reg)
paste("R² do modelo ="+ reg_slm$r.squared)
coeficientes <- coef(reg)
paste("Coeficiente do intercepto:",coeficientes[1])
paste("Coeficiente do X:",coeficientes[2])
reg_slm <- summary(reg)
paste("R² do modelo ="+ str(reg_slm$r.squared))
paste("R² do modelo ="+reg_slm$r.squared)
#Intercepto
reg_slm$coefficients[1,4]
reg_slm$r.squared
char(reg_slm$r.squared)
reg_slm$r.squared[1]
toString(reg_slm$r.squared)
coeficientes <- coef(reg)
paste("Coeficiente do intercepto:",coeficientes[1])
paste("Coeficiente do X:",coeficientes[2])
reg_slm <- summary(reg)
paste("R² do modelo ="+toString(reg_slm$r.squared))
coeficientes <- coef(reg)
paste("Coeficiente do intercepto:",coeficientes[1])
paste("Coeficiente do X:",coeficientes[2])
reg_slm <- summary(reg)
paste("R2 do modelo ="+toString(reg_slm$r.squared))
coeficientes <- coef(reg)
paste("Coeficiente do intercepto:",coeficientes[1])
paste("Coeficiente do X:",coeficientes[2])
reg_slm <- summary(reg)
paste("R2 do modelo =",reg_slm$r.squared)
paste("P Value do modelo =", glance(reg)$p.value)
coeficientes <- coef(reg)
paste("Coeficiente do intercepto:",coeficientes[1])
paste("Coeficiente do X:",coeficientes[2])
reg_slm <- summary(reg)
paste("R2 do modelo =",reg_slm$r.squared)
paste("P Value do modelo =", glance(reg)$p.value)
coeficientes <- coef(reg)
paste("Coeficiente do intercepto:",coeficientes[1])
paste("Coeficiente do X:",coeficientes[2])
reg_slm <- summary(reg)
paste("R2 do modelo =",reg_slm$r.squared)
paste("P Value do modelo =", glance(reg)$p.value)
coeficientes <- coef(reg)
paste("Coeficiente do intercepto:",coeficientes[1])
paste("Coeficiente do X:",coeficientes[2])
reg_slm <- summary(reg)
reg_slm$coefficients[1,4]
reg_slm$coefficients
result <- reg_slm$coefficients[1,1] + reg_slm$coefficients[2,1] * 7800
result
result <- reg_slm$coefficients[1,1] + reg_slm$coefficients[2,1] * 7800
paste("Retorno esperado=",result * 100,"%")
result <- reg_slm$coefficients[1,1] + reg_slm$coefficients[2,1] * 7800
paste("Retorno esperado=",round(result * 100,3),"%")
View(regSemAlfa)
View(dados)
paste("Retorno esperado=",round(result * 100,3),"%",sep="")
paste("Retorno esperado= ",round(result * 100,3),"%",sep="")
result
paste("Melhoria do R2 =", (regSemAlfa_slm$r.squared - reg_slm$r.squared)/ reg_slm$r.squared, "%")
paste("R2 do novo modelo=",regSemAlfa_slm$r.squared)
paste("P valor do novo modelo=",glance(regSemAlfa)$p.value)
paste("R2 do antigo modelo=",reg_slm$r.squared)
paste("P valor do Antigo modelo=",glance(reg)$p.value)
paste("Melhoria do R2 =", (regSemAlfa_slm$r.squared - reg_slm$r.squared)/ reg_slm$r.squared, "%")
regSemAlfa_slm <- summary(regSemAlfa)
paste("R2 do novo modelo=",regSemAlfa_slm$r.squared)
paste("P valor do novo modelo=",glance(regSemAlfa)$p.value)
paste("P valor do novo X=",regSemAlfa_slm$coefficients)
#Printar R2, e o p valor de x
regSemAlfa
glance(regSemAlfa)
paste("Melhoria do R2 =", (regSemAlfa_slm$r.squared - reg_slm$r.squared)/ reg_slm$r.squared *100, "%")
paste("R2 do novo modelo=",regSemAlfa_slm$r.squared)
paste("P valor do novo modelo=",glance(regSemAlfa)$p.value)
paste("R2 do antigo modelo=",reg_slm$r.squared)
paste("P valor do Antigo modelo=",glance(reg)$p.value)
paste("Melhoria do R2 =", (regSemAlfa_slm$r.squared - reg_slm$r.squared)/ reg_slm$r.squared *100, "%")
paste("R2 do novo modelo=",regSemAlfa_slm$r.squared)
paste("P valor do novo modelo=",glance(regSemAlfa)$p.value)
paste("R2 do antigo modelo=",reg_slm$r.squared)
paste("P valor do Antigo modelo=",glance(reg)$p.value)
paste("Melhoria do R2 = ", (regSemAlfa_slm$r.squared - reg_slm$r.squared)/ reg_slm$r.squared *100, "%", sep="")
library(AER)
dados <- read.table("ArquivoExercicio1.csv",header=T,sep=";", dec=".",check.names = F)
names(dados) <- c("Fundos","PL em milhoes","Retorno")
options(scipen = 100)
require(broom)
round_df <- function(df, digits) {
nums <- vapply(df, is.numeric, FUN.VALUE = logical(1))
df[,nums] <- round(df[,nums], digits = digits)
(df)
}
options(digits=6)
regSemAlfa_slm <- summary(regSemAlfa)
paste("R2 do novo modelo=",regSemAlfa_slm$r.squared)
paste("P valor do novo modelo=",glance(regSemAlfa)$p.value)
paste("P valor do novo X=",regSemAlfa_slm$coefficients)
#Printar R2, e o p valor de x
regSemAlfa_slm <- summary(regSemAlfa)
paste("R2 do novo modelo=",regSemAlfa_slm$r.squared)
paste("P valor do novo modelo=",glance(regSemAlfa)$p.value)
paste("P valor do novo X=",regSemAlfa_slm$coefficients)
#Printar R2, e o p valor de x
regSemAlfa_slm$coefficients
paste("P valor do novo X=",regSemAlfa_slm$coefficients[,3])
paste("P valor do novo X=",regSemAlfa_slm$coefficients[,4])
regSemAlfa_slm
regSemAlfa_slm$coefficients
regSemAlfa_slm$coefficients[1]
Mesmo com a regressão mais fraca, já demonstrava uma tendencia de fundos com patrimonios maiores terem mais retorno. Com a regressão mais forte a tendencia foi confirmada, segundo o coeficiente de X `{r} regSemAlfa_slm$coefficients[1]`
Mesmo com a regressão mais fraca, já demonstrava uma tendencia de fundos com patrimonios maiores terem mais retorno. Com a regressão mais forte a tendencia foi confirmada, segundo o coeficiente de X:
regSemAlfa_slm$coefficients[1]
tinytex::install_tinytex()
regSemAlfa_slm$coefficients[1]
rm(list=ls(all=TRUE))
# install.packages("AER")
library(AER)
dados <- read.table("ArquivoExercicio1.csv",header=T,sep=";", dec=".",check.names = F)
names(dados) <- c("Fundos","PL em milhoes","Retorno")
# Questão 1 - Feito
plot(dados$`PL em milhoes`, dados$Retorno,
pch  = 8,
col  = "green",
lwd  = 5,
main = "Relação entre Retorno e Patrimonio liquido de fundos de investimento",
xlab = "Patrimonio Liquido do fundo",
ylab = "Retorno do fundo")
# Questão 2 - Feito
media <- c(mean(dados$`PL em milhoes`),mean(dados$Retorno))
mediana <- c(median(dados$`PL em milhoes`),median(dados$Retorno))
minimo <- c(min(dados$`PL em milhoes`),min(dados$Retorno))
maximo <- c(max(dados$`PL em milhoes`),max(dados$Retorno))
desvio_padrao <- c(sd(dados$`PL em milhoes`),sd(dados$Retorno))
variancia <- c(var(dados$`PL em milhoes`),var(dados$Retorno))
enriched_data <- cbind.data.frame(media,mediana,minimo,maximo,
desvio_padrao,variancia)
# Questão 3 - Feito
covariancia <- cov(dados$`PL em milhoes`,dados$Retorno)
correlacao <- cor(dados$`PL em milhoes`,dados$Retorno)
# Questão 4 - Feito
x <- dados$`PL em milhoes`
y <- dados$Retorno
reg <- lm(y ~ x)
# Questão 5 - Feito
abline(reg, col=4)
# Questão 6 - Feito
coef(reg)
reg_slm <- summary(reg)
reg_slm[13]
#' O P valor do modelo é significativo
#' O modelo explicado tem o R-quadrado = 53,5%
# Questão 7 - Feito
reg_slm$r.squared
reg_slm$aliased
reg_slm
require(broom)
glance(reg)$p.value
toString(reg_slm$r.squared)
#' O modelo explicado tem o R-quadrado = 53,5% ou seja,
#' as variações do Retorno são explicadas em 53,5% dos casos pelo PL, sendo então,
#' um modelo aceitavel
# Questão 8 - Feito
#Intercepto
reg_slm$coefficients[1,4]
#Coeficiente
reg_slm$coefficients[2,4]
#nivel de significancia = p valor
#' O p valor do Alfa é mairo que 5% por isso faz a variavel ser insignificante,
#' já o p valor do Beta é menor que 5%, por isso é significante
# Questão 9
result <- reg_slm$coefficients[1,1] + reg_slm$coefficients[2,1] * 7800
result
# Questão 10
x <- dados$`PL em milhoes`
y <- dados$Retorno
regSemAlfa <- lm(y ~ x - 1)
# Questão 11
abline(regSemAlfa, col="red")
# Questão 12
regSemAlfa_slm <- summary(regSemAlfa)
#Printar R2, e o p valor de x
regSemAlfa_slm
#' Grande parte dos indicadores melhoraram em relação ao modelo anterior
#' por conta disso é um modelo melhorado que o primeiro
#' R2 melhorou de 53% para 85% sendo um modelo mais adequado que o primeiro,
#' o P Valor de x dele se tornou estatisticamente igual a 0, por isso melhorou
#' O P Valor do modelo se tornou estatisticamente igual 0
# Questão 13
#' Grande parte dos indicadores melhoraram em relação ao modelo anterior
#' por conta disso é um modelo melhorado que o primeiro
#' Printe o R Quadrado e a diferença entre eles assumindo e em %
#' e o 2 é o mais adequado por conta do R
# Questão 14
regSemAlfa_slm$coefficients[1]
# Assumindo o modelo mais preciso, o 2, a melhor firma é a com o maior PL disponivel
# Questão 15
# Idade do Fundo, Taxa de adminisitração, taxa de performance
# Nome do artigo fonte: https://convibra.org/congresso/res/uploads/pdf/artigo23093_20201802.pdf
predict(reg_slm)
predict(reg)
